<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xz.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.xz.bean.Book">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publish" jdbcType="VARCHAR" property="publish" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="edition" jdbcType="VARCHAR" property="edition" />
    <result column="book_info" jdbcType="VARCHAR" property="bookInfo" />
    <result column="book_cover" jdbcType="VARCHAR" property="bookCover" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <select id="selectSearchData" resultMap="BaseResultMap">
    select id,ISBN,book_name,author,publish,category,edition,book_info,book_cover,create_time,modify_time,remark
    from book where is_del='0'
    <if test="findall != null and findall != ''">
      AND (ISBN=#{findall} or binary book_name LIKE CONCAT('%',#{findall},'%') or binary author LIKE CONCAT('%',#{findall},'%')
      or binary publish LIKE CONCAT('%',#{findall},'%') or category=#{findall} or binary edition LIKE CONCAT('%',#{findall},'%'))
    </if>
    order by order_view
  </select>
</mapper>